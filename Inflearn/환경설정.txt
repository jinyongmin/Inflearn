Spring boot starter logging			-logback
							-slf4j
--------------------------------------------------------------------------------------------------------------------------
라이브러리 살펴보기
Grandle은 의존관계가 있는 라이브러리를 함께 다운로드한다.

스프링부트 라이브러리
spring-boot-starter-web
		spring-boot-starter-tomcat: 톰켓(웹서버)
		spring-webmvc: 스프링 웹 MVC

spring-boot-starter-thymeleaf: 타임리프 템플릿 엔진(View)
spring-boot-starter(공통): 스프링부트 + 스프링코어 + 로깅
	spring-boot
		spring-core
위에 두개가 다 땡겨진다.
	spring-boot-starter-logging
		logback,slf4j조합으로 많이 운영한다.

테스트 라이브러리
	junit: 테스트 프레임워크
	mockito: 목 라이브러리
	assertj:테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리
	spring-test:스프링 통합 테스트 지원

-------------------------------------------------------------------------------------------------------------------------
View 환경설정

Welcome Page 만들기

-------------------------------------------------------------------------------------------------------------------------
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Hello</title>
</head>
<body>
Hello
<a href="/hello">hello</a>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------------
스프링 부트가 제공하는 Welcome Page 기능
static/index.html 을 올려두면 Welcome page 기능을 제공한다.


thymeleaf 템블릿 엔진을 사용하면 위의 코드를 변경할 수 있다



!!
웹 브라우저 localhost:8080/hello 스프링부트는 톰켓이라는 웹서버를 내장하고있다. 
톰켓 서버에서 /hello 에 HelloController에 있는 @GetController "hello" url에 매칭!
GetMapping("hello")에 매칭되는 메소드를 실행!


public String hello(Model model){


}

스프링이 Model model이라는 걸 만들어서 넘겨줌
model.addAttriubute(키="data",값="hello!");

return "hello"; ---->resources templates에 있는 hello를 찾아가서 hello.html화면을실행시켜!

